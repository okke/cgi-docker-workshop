doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Hello Docker

    link(rel='stylesheet', type='text/css', href='build/build.css')

  body

    article

      section
        h1 Hello Docker
        img(src='images/docker-logo.jpg')
        br
        h3 Okke van 't verlaat @ CGI
        br
        a(href="http://okke.github.io/cgi-docker-workshop/") http://okke.github.io/cgi-docker-workshop/

      section
        h2 even voorstellen
        img(src='images/me.jpg' height=500 width=300)

      section
        h2 mijn motto
        img(src='images/lazy.jpg' height=300 width=600)

      section
        h2 maar de dagelijkse praktijk
        img(src='images/frustrated.jpg' height=300 width=300)

      section
        h2 101+ mogelijke development stacks
        ul
          li 
          li httpd + static files 
          li ruby on rails + mysql + memcache
          li tomcat + jre8 + cassandra
          li play + mongodb + activemq
          li node.js + redis
          li ....

      section
        h2 101+ mogelijke runtime omgevingen
        ul
          li 
          li lokale machine
          li test omgeving
          li geclusterde acceptatie omgeving
          li productie omgeving ergens in de cloud
          li ....

      section
        h2 Matrix from hell
        img(src='images/matrix-from-hell.png' height=300 width=600)

      section
        h2 Klinkt als een bekend probleem
        img(src='images/matrix-from-hell2.png' height=300 width=600)

      section
        h2 Hallo Container
        img(src='images/container.png' height=300 width=600)

      section
        h2 Vanuit 'Ops' perspectief (de buitenkant)
        img(src='images/container2.png' height=300 width=600)

      section
        h2 Vanuit 'Dev' perspectief
        br
        img(src='images/container3.jpg' height=300 width=600)

      section
        h2 Een paar belangrijke concepten
        ul
          li 
          li Alles is bouwbaar dus ...
          li Alles is weggooibaar
          li VM's vs. Containers
					li Layers
          li ....

      section
        h2 VM vs. Container
        img(src='images/vm-vs-container.jpg' height=300 width=400)

      section
        h2 Layers
        img(src='images/layers.jpg' height=500 width=300)

      section
        h2 En nog paar belangrijke concepten
        ul
          li 
          li Volumes (data delen)
          li Networking
          li ....

      section
        h2 Docker architectuur
        img(src='images/architecture.jpg' height=175 width=600)

      section
        h2 Start a container
        pre
          code.language-javascript.
            docker run -it ubuntu

      section
        h2 Start a container and run a command inside
        pre
          code.language-javascript.
            docker run ubuntu ps
        pre
          i PID TTY          TIME CMD
          br
          i   1 ?        00:00:00 ps

      section
        h2 Start a container and detach
        pre
          code.language-javascript.
            docker run -d nlcgi/redis-srv
            docker ps
        pre
          i CONTAINER ID        IMAGE
          br
          i 3992ab89480d        nlcgi/redis-srv:latest

      section
        h2 Share a volume with our host OS
        pre
          code.language-javascript.
            docker run -v /data:/data -it nlcgi/base

      section
        h2 Share a volumes between containers
        pre
          code.language-javascript.
            docker create -v /dbshare --name shared-volume nlcgi/base
            docker run --volumes-from shared-volume -it nlcgi/rubydev

      section
        h2 Link two containers
        pre
          code.language-javascript.
            docker run --name redis -d nlcgi/redis-srv
            docker run --link redis:db -it nlcgi/redis-cli

      section
        h2 build an image from a Dockerfile
        pre
          code.language-javascript.
            docker build -t "nlcgi/base" images/nlcgi-base/
            docker images

      section
        h2 Simple Dockerfile
        pre
          code.language-javascript.
            FROM ubuntu
            
            ENV http_proxy http://proxy.nl.logica.com:80
            ENV https_proxy http://proxy.nl.logica.com:80
            ENV no_proxy=localhost,127.0.0.1

            RUN apt-get update -y

      section
        h2 A bit more sophisticated
        pre
          code.language-javascript.
            FROM nlcgi/base
            
            RUN apt-get install -y redis-server
            
            EXPOSE 6379
            
            ADD startup.sh /tmp/

            ENTRYPOINT exec /tmp/startup.sh

      section
        h2 Examples
        br
        img(src='images/github.png' width=100 height=100)
        br
        a(href="https://github.com/okke/mydockers") https://github.com/okke/mydockers

      section
        h2 Let's play
        img(src='images/ship.jpg' width="50%" height="50%")
        a(href="https://github.com/okke/cgi-docker-workshop/tree/master/docker") https://github.com/okke/cgi-docker-workshop/tree/master/docker
         


    script(src='build/build.js')
